{"ast":null,"code":"var _jsxFileName = \"/Users/nirupama/Desktop/Quicksell/quicksell/src/Components/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"../Form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  const {\n    setMax,\n    setMin,\n    setCounter,\n    max,\n    min\n  } = props;\n  var numbers = /^[-+]?[0-9]+$/;\n  const [formCounter, setFormCounter] = useState(\"\");\n  const [formMax, setFormMax] = useState(\"\");\n  const [formMin, setFormMin] = useState(\"\");\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (formMax !== \"\") setMax(parseInt(formMax));else setMax(1000);\n    if (formMin !== \"\") setMin(parseInt(formMin));else setMin(-1000);\n\n    if (formCounter !== \"\") {\n      if (parseInt(formCounter) > max) {\n        alert(\"Counter is greater than upper limit\");\n        setFormCounter(\"\");\n        return;\n      }\n\n      if (parseInt(formCounter) < min) {\n        alert(\"Counter is smaller than lower limit\");\n        setFormCounter(\"\");\n        return;\n      }\n\n      if (formCounter.match(numbers)) setCounter(parseInt(formCounter));else alert(\"Invalid Input\");\n    } else {\n      setCounter(1);\n    }\n\n    setFormCounter(\"\");\n    setFormMax(\"\");\n    setFormMin(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FormCont\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"FormInput\",\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Set Counter Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formCounter,\n          onChange: e => setFormCounter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Set Max Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formMax,\n          onChange: e => setFormMax(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Set Min Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formMin,\n          onChange: e => setFormMin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"pwIm800DT2ItzrOJLXQnUKDx8bU=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/nirupama/Desktop/Quicksell/quicksell/src/Components/Form.js"],"names":["useState","Form","props","setMax","setMin","setCounter","max","min","numbers","formCounter","setFormCounter","formMax","setFormMax","formMin","setFormMin","onSubmitHandler","e","preventDefault","parseInt","alert","match","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport  \"../Form.css\";\n\nconst Form=(props)=>{\n    const {setMax,setMin,setCounter,max,min}=props;\n    var numbers = /^[-+]?[0-9]+$/;\n\n    const[formCounter,setFormCounter]=useState(\"\");\n    const [formMax,setFormMax]=useState(\"\");\n    const [formMin,setFormMin]=useState(\"\");\n    \n    const onSubmitHandler=(e)=>{\n        e.preventDefault();\n       \n        if(formMax!==\"\")  setMax(parseInt(formMax)) \n        else setMax(1000)\n        \n        if(formMin!==\"\") setMin(parseInt(formMin))\n        else  setMin(-1000)\n        \n\n        if(formCounter!==\"\") {\n            if(parseInt(formCounter)>max){\n                alert(\"Counter is greater than upper limit\");\n                setFormCounter(\"\");\n                return;\n            }\n            if(parseInt(formCounter)<min){\n                alert(\"Counter is smaller than lower limit\");\n                setFormCounter(\"\");\n                return;\n            }\n            if(formCounter.match(numbers)) setCounter(parseInt(formCounter));\n            else alert(\"Invalid Input\");\n            \n        }else{\n            setCounter(1);\n        }\n\n        setFormCounter(\"\");\n        setFormMax(\"\");\n        setFormMin(\"\");\n    }\n\n    return(\n        <div className=\"FormCont\">\n            <form className=\"FormInput\" onSubmit={onSubmitHandler}>\n                <label>\n                    Set Counter Value:\n                    <input value={formCounter}  onChange={e=>setFormCounter(e.target.value)}/>\n                </label>\n                <label >\n                    Set Max Value:\n                     <input value={formMax} onChange={e=>setFormMax(e.target.value)}/>\n                </label>\n                <label>\n                     Set Min Value:\n                     <input value={formMin}  onChange={e=>setFormMin(e.target.value)}/>\n                </label>\n                <button className=\"button\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}